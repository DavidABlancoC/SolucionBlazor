@page "/usuarios"

@using BlazorCrud.Shared;
@using CurrieTechnologies.Razor.SweetAlert2;
@using BlazorCrud.Client.Services;

@inject SweetAlertService SwtAlert;
@inject IUsuarioService usuarioService;

<h3>@titulo</h3>

<a class="btn btn-success btn-sm mb-3" href="usuario">Nuevo Usuario</a>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Mail</th>
            <th>Direccion</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if(listaUsuario == null)
        {
            <tr>
                <td colspan="5" align="center">
                    <p>No hay entradas disponibles</p>
                </td>
            </tr>
        }
        else
        {
            @foreach(var item in listaUsuario)
            {
                <tr>
                    <td>@item.Nombre</td>
                    <td>@item.Apellidos</td>
                    <td>@item.Mail</td>
                    <td>@item.Direccion</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="usuario/@item.IdUsuario">
                            <i class="oi oi-pencil"></i>
                        </a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Eliminar(item.IdUsuario))">
                            <i class="oi oi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    string titulo = string.Empty;

    List<UsuarioDTO>? listaUsuario = null;

    protected override async Task OnInitializedAsync()
    {
        titulo = "Usuarios"; 
        listaUsuario = await usuarioService.Lista();
    }

    private async Task Eliminar(int id)
    {
        var resultado = await SwtAlert.FireAsync(new SweetAlertOptions
        {
            Title = "Eliminar Usuario",
            Text = "Esta seguro de eliminar el usuario?",
            Icon = SweetAlertIcon.Question,
            ShowCancelButton = true
        });

        if (resultado.IsConfirmed)
        {
            var eliminado = await usuarioService.Eliminar(id);

            if (eliminado)
            {
                listaUsuario = listaUsuario!.FindAll(e => e.IdUsuario != id);
            }
        }
    }
}
